#!/sbin/runscript
# Copyright 1999-2007 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2

# Description:       RabbitMQ broker
# Short-Description: Enable AMQP service provided by RabbitMQ broker
opts="${opts} status rotate"
depend()
{	
    need net logger localmount
    after bootmisc
    use dns
}

CONFIG_FILE="/etc/conf.d/rabbitmq-server"

# wrapper to allows us to have gentoo style logging
WRAPPER=/usr/sbin/rabbitmq-invoke
DAEMON=/usr/sbin/rabbitmq-multi

# pinched from debian initscript and modified for gentoo
start_rabbitmq()
{
    info_log="${LOG_BASE}/startup_log"
    error_log="${LOG_BASE}/startup_err"
    set +e
    RETVAL=1
    su  -s /bin/sh -c "$WRAPPER $info_log $error_log start_all ${NODE_COUNT} &" ${USER}
    case "$?" in
    0)
        einfo "SUCCESS"
        RETVAL=0
    ;;
    1) ERR="TIMEOUT"
        eerror  "${ERR} - check ${info_log}"
        eerror  "${ERR} - check ${error_log}"
    ;;
    *) ERR="FAILED"
        eerror  "${ERR} - check ${info_log}"
        eerror  "${ERR} - check ${error_log}"
    ;;
    esac
    set -e
}

stop_rabbitmq()
{
    info_log="${LOG_BASE}/shutdown_log"
    error_log="${LOG_BASE}/shutdown_err"
    set +e
    status_rabbitmq quiet
    if [ "$RETVAL" == "0" ] ; then
        su  -s /bin/sh -c "$WRAPPER $info_log $error_log stop_all" ${USER}
        RETVAL=$?
        if [ ${RETVAL} != 0 ] ; then
            ERR="FAILED"
            eerror  "${ERR} - check ${info_log}"
            eerror  "${ERR} - check ${error_log}"
        fi
    else
        eerror "No nodes running"
        RETVAL=0
    fi
    set -e
}

status_rabbitmq()
{
    RETVAL=0
    set +e
    if [ "$1" != "quiet" ] ; then
        su -s /bin/sh -c "${DAEMON} status" ${USER} 2>&1
    else
        su -s /bin/sh -c "${DAEMON} status" ${USER} > /dev/null 2>&1
    fi
    if [ $? != 0 ] ; then
        RETVAL=1
    fi
    set -e
}

rotate_logs_rabbitmq()
{
    set +e
    su -s /bin/sh -c "${DAEMON} rotate_logs ${ROTATED_LOG_SUFFIX}" ${USER} 2>&1
    set -e
}

# gentoo funcs
start()
{
    checkconfig || return 1
    ebegin "Starting ${DESC}: "
    start_rabbitmq
    eend $?
}

stop()
{
    ebegin "Stopping ${DESC}: "
    stop_rabbitmq
    eend $?
}

restart()
{
    svc_stop
    svc_start
}

status()
{
    ebegin "Querying status of ${DESC}: "
    status_rabbitmq 
    eend $?
}

rotate()
{
    ebegin "Rotating log files for ${DESC}: "
    rotate_logs_rabbitmq 
    eend $?
}

checkconfig()
{
    if [ ! -r ${CONFIG_FILE} ] || [ ! -x ${DAEMON} ] || [ ! -x ${WRAPPER} ] ;
    then
        eerror "You need a ${CONFIG_FILE} file to run rabbitmq"
        return 1
    fi
}
