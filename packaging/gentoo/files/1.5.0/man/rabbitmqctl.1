.\" Automatically generated by Pod::Man 2.1801 (Pod::Simple 3.05)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "rabbitmqctl 1"
.TH rabbitmqctl 1 "2008-12-17" "" "RabbitMQ AMQP Server"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
rabbitmqctl \- command line tool for managing a RabbitMQ broker
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
rabbitmqctl [\-n \fInode\fR] \fI<command\fR> [command options]
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
RabbitMQ is an implementation of \s-1AMQP\s0, the emerging standard for high
performance enterprise messaging. The RabbitMQ server is a robust and
scalable implementation of an \s-1AMQP\s0 broker.
.PP
rabbitmqctl is a command line tool for managing a RabbitMQ broker.
It performs all actions by connecting to one of the broker's nodes.
.SH "OPTIONS"
.IX Header "OPTIONS"
\&\fB\-n\fR \fInode\fR
    default node is \f(CW\*(C`rabbit@server\*(C'\fR, where server is the local host.
    On a host named \f(CW\*(C`server.example.com\*(C'\fR, the node name of the
    RabbitMQ Erlang node will usually be rabbit@server (unless
    \s-1RABBITMQ_NODENAME\s0 has been set to some non-default value at broker
    startup time).  The output of hostname \-s is usually the correct
    suffix to use after the \*(L"@\*(R" sign. See \fIrabbitmq\-server\fR\|(1) for
    details of configuring the RabbitMQ broker.
.PP
\&\fB\-q\fR
    quiet output mode is selected with the \fB\-q\fR flag. Informational 
    messages are suppressed when quiet mode is in effect.
.SH "COMMANDS"
.IX Header "COMMANDS"
.SS "\s-1APPLICATION\s0 \s-1AND\s0 \s-1CLUSTER\s0 \s-1MANAGEMENT\s0"
.IX Subsection "APPLICATION AND CLUSTER MANAGEMENT"
stop
    stop the Erlang node on which RabbitMQ broker is running.
.PP
stop_app
    stop the RabbitMQ application, leaving the Erlang node running.
    This command is typically run prior to performing other management
    actions that require the RabbitMQ application to be stopped,
    e.g. \fIreset\fR.
.PP
start_app
    start the RabbitMQ application.
    This command is typically run prior to performing other management
    actions that require the RabbitMQ application to be stopped,
    e.g. \fIreset\fR.
.PP
status
    display various information about the RabbitMQ broker, such as
    whether the RabbitMQ application on the current node, its version
    number, what nodes are part of the broker, which of these are
    running.
.PP
force
    return a RabbitMQ node to its virgin state.
    Removes the node from any cluster it belongs to, removes all data
    from the management database, such as configured users, vhosts and
    deletes all persistent messages.
.PP
force_reset
    the same as \fIforce\fR command, but resets the node unconditionally,
    regardless of the current management database state and cluster
    configuration.
    It should only be used as a last resort if the database or cluster
    configuration has been corrupted.
.PP
rotate_logs [suffix]
    instruct the RabbitMQ node to rotate the log files. The RabbitMQ
    broker will attempt to append the current contents of the log file
    to the file with the name composed of the original name and the
    suffix. It will create a new file if such a file does not already
    exist. When no \fIsuffix\fR is specified, the empty log file is
    simply created at the original location; no rotation takes place.
    When an error occurs while appending the contents of the old log
    file, the operation behaves in the same way as if no \fIsuffix\fR was
    specified.
    This command might be helpful when you are e.g. writing your own
    logrotate script and you do not want to restart the RabbitMQ node.
.PP
cluster \fIclusternode\fR ...
    instruct the node to become member of a cluster with the specified
    nodes determined by \fIclusternode\fR option(s).
    See http://www.rabbitmq.com/clustering.html for more information
    about clustering.
.SS "\s-1USER\s0 \s-1MANAGEMENT\s0"
.IX Subsection "USER MANAGEMENT"
add_user \fIusername\fR \fIpassword\fR
    create a user named \fIusername\fR with (initial) password \fIpassword\fR.
.PP
change_password \fIusername\fR \fInewpassword\fR
    change the password for the user named \fIusername\fR to \fInewpassword\fR.
.PP
list_users
    list all users.
.SS "\s-1ACCESS\s0 \s-1CONTROL\s0"
.IX Subsection "ACCESS CONTROL"
add_vhost \fIvhostpath\fR
    create a new virtual host called \fIvhostpath\fR.
.PP
delete_vhost \fIvhostpath\fR
    delete a virtual host \fIvhostpath\fR.
    That command deletes also all its exchanges, queues and user mappings.
.PP
list_vhosts
    list all virtual hosts.
.PP
map_user_vhost \fIusername\fR \fIvhostpath\fR
    grant the user named \fIusername\fR access to the virtual host called
    \fIvhostpath\fR.
.PP
unmap_user_vhost \fIusername\fR \fIvhostpath\fR
    deny the user named \fIusername\fR access to the virtual host called
    \fIvhostpath\fR.
.PP
list_user_vhost \fIusername\fR 
    list all the virtual hosts to which the user named \fIusername\fR has
    been granted access.
.SS "\s-1SERVER\s0 \s-1STATUS\s0"
.IX Subsection "SERVER STATUS"
list_queues [\-p \fIvhostpath\fR] [\fIqueueinfoitem\fR ...]
    list queue information by virtual host. If no \fIqueueinfoitem\fRs
    are specified then then name and number of messages is displayed
    for each queue.
.PP
\fIQueue information items\fR
.IX Subsection "Queue information items"
.Sp
.RS 4
name 
    URL-encoded name of the queue
.Sp
durable 
    whether the queue survives server restarts
.Sp
auto_delete
    whether the queue will be deleted when no longer used
.Sp
arguments
    queue arguments
.Sp
pid
    Erlang process identifier associated with the queue
.Sp
messages_ready
    number of ready messages
.Sp
messages_unacknowledged
    number of unacknowledged messages
.Sp
messages_uncommitted
    number of uncommitted messages
.Sp
messages
    sum of ready, unacknowledged and uncommitted messages
.Sp
acks_uncommitted
    number of uncommitted acknowledgements
.Sp
consumers
    number of consumers
.Sp
transactions
    number of transactions
.Sp
memory
    bytes of memory consumed by the Erlang process for the queue,
    including stack, heap and internal structures
.RE
.PP
list_exchanges [\-p \fIvhostpath\fR] [\fIexchangeinfoitem\fR ...]
    list exchange information by virtual host. If no
    \fIexchangeinfoitem\fRs are specified then name and type is displayed
    for each exchange.
.PP
\fIExchange information items\fR
.IX Subsection "Exchange information items"
.Sp
.RS 4
name 
    URL-encoded name of the exchange
.Sp
type
    exchange type (\fBdirect\fR, \fBtopic\fR or \fBfanout\fR)
.Sp
durable
    whether the exchange survives server restarts
.Sp
auto_delete
    whether the exchange is deleted when no longer used
.Sp
arguments
    exchange arguments
.RE
.PP
list_bindings [\-p \fIvhostpath\fR]
    list bindings by virtual host. Each line contains exchange name,
    routing key and queue name (all \s-1URL\s0 encoded) and arguments.
.PP
list_connections [\fIconnectioninfoitem\fR ...]
    list connection information. If no \fIconnectioninfoitem\fRs are
    specified then the user, peer address and peer port are displayed.
.PP
\fIConnection information items\fR
.IX Subsection "Connection information items"
.Sp
.RS 4
pid
    Erlang process id associated with the connection
.Sp
address
    server \s-1IP\s0 number
.Sp
port
    server port
.Sp
peer_address
    peer address
.Sp
peer_port
    peer port
.Sp
state
    connection state (\fBpre-init\fR, \fBstarting\fR, \fBtuning\fR, \fBopening\fR,
    \fBrunning\fR, \fBclosing\fR, \fBclosed\fR)
.Sp
channels
    number of channels using the connection
.Sp
user
    username associated with the connection
.Sp
vhost
    URL-encoded virtual host
.Sp
timeout
    connection timeout
.Sp
frame_max
    maximum frame size (bytes)
.Sp
recv_oct
    octets received
.Sp
recv_cnt
    packets received
.Sp
send_oct
    octets sent
.Sp
send_cnt
    packets sent
.Sp
send_pend
    send queue size
.RE
.PP
The list_queues, list_exchanges and list_bindings commands accept an
optional virtual host parameter for which to display results, defaulting
to \fI\*(L"/\*(R"\fR. The default can be overridden with the \fB\-p\fR flag. Result
columns for these commands and list_connections are tab-separated.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
Create a user named foo with (initial) password bar at the Erlang node
rabbit@test:
.PP
.Vb 1
\&    rabbitmqctl \-n rabbit@test add_user foo bar
.Ve
.PP
Grant user named foo access to the virtual host called test at the
default Erlang node:
.PP
.Vb 1
\&    rabbitmqctl map_user_vhost foo test
.Ve
.PP
Append the current logs' content to the files with \*(L".1\*(R" suffix and reopen
them:
.PP
.Vb 1
\&    rabbitmqctl rotate_logs .1
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIrabbitmq\-multi\fR\|(1), \fIrabbitmq\-server\fR\|(1)
.SH "AUTHOR"
.IX Header "AUTHOR"
The RabbitMQ Team <info@rabbitmq.com>
.SH "REFERENCES"
.IX Header "REFERENCES"
RabbitMQ Web Site: http://www.rabbitmq.com
